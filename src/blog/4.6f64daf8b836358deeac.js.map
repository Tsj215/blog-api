{"version":3,"sources":["webpack:///./src/pages/moCloud/containers/MessageBoard/index.less","webpack:///./src/assets/cloud.svg","webpack:///./src/pages/moCloud/containers/MessageBoard/index.tsx","webpack:///./src/pages/moCloud/index.tsx"],"names":["module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","createElement","d","fill","opacity","props","width","height","TabPane","color","MessageBoardComp","onRefresh","loadMoCloudMsg","renderTimeLine","moCloudMsg","defaultActiveKey","size","style","tab","className","styles","mode","reverse","map","m","index","renderTimeLineItem","content","message","S","createAt","actions","title","onConfirm","deleteMoCloudMsg","id","success","type","cursor","transition","state","dot","theme","Item","marginTop","Math","round","random","align","justify","onMouseEnter","setState","onMouseLeave","span","newMessage","inputValue","isLoading","value","addonBefore","marginBottom","onChange","onInputChange","display","justifyContent","showTime","onDateChange","loading","onClick","dateValue","addMoCloudMsg","bind","error","e","_","React","MessageBoard","connect","moCloud","moCloudActions","withRouter","path","match","exact","component","to"],"mappings":"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","file":"4.6f64daf8b836358deeac.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appContainer\":\"_1uh8ZGiL6E\",\"appCenter\":\"_1a-8ITEeck\",\"flexStart\":\"_2hY8Eu1gjy\",\"flexEnd\":\"i95AcMETkm\",\"spaceBetween\":\"_3vh-UcXv4g\",\"spaceAround\":\"_2OopYRB607\",\"button\":\"_2_gdIDm2P4\",\"container\":\"_3e12owo1PE\",\"timeLine\":\"_2qxNJE-T3o\",\"autoLine\":\"_25wAy5CG7r\",\"timeLineItem\":\"_3IsWrgk6jI\",\"addMsg\":\"YOestfy7rj\"};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\n\nvar _ref =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M196.443 87.686c-.007 14.068-11.41 25.471-25.478 25.478h-52.689a23.423 23.423 0 01-3.456-.248 34.21 34.21 0 01-4.159.248H36.435a35.904 35.904 0 110-71.802h14.62C53.937 18.608 72.878 1.292 95.8.457c22.92-.837 43.073 15.052 47.608 37.535h4.54c12.993-.003 23.53 10.526 23.536 23.52v.702c13.867.28 24.962 11.602 24.959 25.472z\",\n  fill: \"#858FEB\",\n  opacity: 0.8\n});\n\nvar SvgCloud = function SvgCloud(props) {\n  return React.createElement(\"svg\", _extends({\n    width: 197,\n    height: 114\n  }, props), _ref);\n};\n\nexport default SvgCloud;","import {\n  Button,\n  Col,\n  DatePicker,\n  Icon,\n  Input,\n  Popconfirm,\n  Row,\n  Tabs,\n  Timeline,\n  message,\n} from 'antd';\nimport { Moment } from 'moment';\nimport * as React from 'react';\nimport { connect } from 'react-redux';\n\nimport { addMoCloudMsg, deleteMoCloudMsg } from '@/apis';\nimport Cloud from '@/assets/cloud.svg';\nimport { IState } from '@/ducks';\nimport { moCloudActions } from '@/pages/moCloud/ducks/moCloud';\nimport * as S from '@/schema';\n\nimport * as styles from './index.less';\n\nexport interface MessageBoardProps {\n  moCloudMsg: S.MoCloudMsg[];\n  loadMoCloudMsg: () => void;\n}\n\nconst { TabPane } = Tabs;\n\nconst color = ['red', '#8C8DFF', '#178fff', '#13c2c2'];\n\nexport interface MessageBoardState {\n  isLoading: boolean;\n  inputValue: string;\n  dateValue: string;\n  // 此处 number 当做 string 用\n  [key: number]: boolean;\n}\n\nexport class MessageBoardComp extends React.Component<\n  MessageBoardProps,\n  MessageBoardState\n> {\n  constructor(props: MessageBoardProps) {\n    super(props);\n\n    this.state = {\n      isLoading: false,\n      inputValue: '',\n      dateValue: '',\n    };\n  }\n\n  componentDidMount() {\n    this.onRefresh();\n  }\n\n  onRefresh = () => {\n    this.props.loadMoCloudMsg();\n  };\n\n  renderTimeLine = () => {\n    const { moCloudMsg } = this.props;\n\n    return (\n      <Tabs defaultActiveKey=\"1\" size=\"small\" style={{ width: 490 }}>\n        <TabPane tab=\"晚安\" key=\"1\">\n          <div className={styles.autoLine}>\n            <Timeline mode=\"alternate\" reverse={true}>\n              {moCloudMsg.length > 0 &&\n                moCloudMsg.map((m, index) => this.renderTimeLineItem(m, index))}\n            </Timeline>\n          </div>\n        </TabPane>\n        <TabPane tab=\"知识点\" key=\"2\">\n          知识点啊\n        </TabPane>\n      </Tabs>\n    );\n  };\n\n  renderTimeLineItem = (m: S.MoCloudMsg, index: number) => {\n    const content = (\n      <>\n        <span>{m.message}</span>\n        <p>{S.formatDatetime(m.createAt)}</p>\n      </>\n    );\n\n    const actions = (\n      <Popconfirm\n        title=\"确定删除吗\"\n        onConfirm={async () => {\n          const resp = await deleteMoCloudMsg(m.id);\n          if (resp) {\n            message.success('删除成功');\n            this.onRefresh();\n          }\n        }}\n      >\n        <Icon\n          type=\"delete\"\n          style={{\n            cursor: 'pointer',\n            transition: 'color .6s',\n            color: !this.state[m.id] && '#fff',\n          }}\n        />\n      </Popconfirm>\n    );\n\n    const dot = (\n      <Icon type=\"heart\" theme=\"filled\" style={{ color: '#8C8DFF' }} />\n    );\n\n    return (\n      <Timeline.Item\n        key={m.id}\n        dot={index == 0 && dot}\n        style={{ marginTop: 12 }}\n        color={color[Math.round(Math.random() * 4)]}\n      >\n        <Row\n          type=\"flex\"\n          align=\"middle\"\n          justify=\"space-between\"\n          onMouseEnter={() => this.setState({ [m.id as any]: true })}\n          onMouseLeave={() => this.setState({ [m.id as any]: false })}\n        >\n          <Col span={20}>{content}</Col>\n          <Col span={2}>{actions}</Col>\n        </Row>\n      </Timeline.Item>\n    );\n  };\n\n  newMessage = () => {\n    const { inputValue, isLoading } = this.state;\n\n    return (\n      <div className={styles.addMsg}>\n        <Input\n          value={inputValue}\n          addonBefore={<Icon type=\"cloud\" />}\n          style={{ width: 332, marginBottom: 12 }}\n          onChange={this.onInputChange}\n        />\n        <div\n          style={{\n            display: 'flex',\n            width: 332,\n            justifyContent: 'space-between',\n          }}\n        >\n          <DatePicker\n            showTime={true}\n            style={{ width: 250 }}\n            onChange={this.onDateChange}\n          />\n          <Button\n            loading={isLoading}\n            onClick={async () => {\n              const { inputValue, dateValue } = this.state;\n              if (inputValue && dateValue) {\n                this.setState({ isLoading: true });\n                const resp = await addMoCloudMsg(inputValue, dateValue);\n                if (resp) {\n                  this.setState({\n                    inputValue: '',\n                    dateValue: '',\n                    isLoading: false,\n                  });\n                  message.success('添加成功');\n                  this.onRefresh();\n                }\n              } else {\n                this.setState({ isLoading: false });\n                message.error('请输入内容并选择时间');\n              }\n            }}\n          >\n            确定\n          </Button>\n        </div>\n      </div>\n    );\n  };\n\n  onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ inputValue: e.target.value });\n  };\n\n  onDateChange = (_: Moment, dateValue: string) => {\n    this.setState({ dateValue });\n  };\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <div className={styles.timeLine}>\n          <Cloud />\n          {this.renderTimeLine()}\n        </div>\n        {this.newMessage()}\n      </div>\n    );\n  }\n}\n\nexport const MessageBoard = connect(\n  (state: IState) => ({\n    moCloudMsg: state.moCloud.moCloudMsg.moCloudMsg,\n  }),\n  {\n    loadMoCloudMsg: moCloudActions.loadMoCloudMsg,\n  },\n)(MessageBoardComp as any);\n","import * as React from 'react';\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom';\n\nimport { MessageBoard } from './containers/MessageBoard';\n\nexport default withRouter(({ match: { path } }) => {\n  return (\n    <Switch>\n      <Route exact={true} path={`${path}/message`} component={MessageBoard} />\n      <Redirect to={`${path}/message`} />\n    </Switch>\n  );\n});\n"],"sourceRoot":""}